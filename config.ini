
# 要件定義書

## プロジェクト名
Marpスライド作成およびGitHub Pages公開プロジェクト
[Github Repository](git@github:yuya4i/marp-study.git)
※READMEにリポジトリのリンク記載は不要
## プロジェクト概要
本プロジェクトは、**Marp** を用いてスライドを作成し、GitHub Pagesで公開することを目的とします。教育目的や備忘録的側面を持つスライドを作成し、Marpの基本および高度な機能を最大限に活用します。

---

## プロジェクトの目的
1. **Marpの基本操作の習得**
   - Marpを使ったスライド作成の基礎から応用まで学習。
2. **Marpの機能の活用**
   - 各種テキスト装飾、画像、コード挿入、アニメーションなど多様な機能を活用したスライド作成。
3. **GitHub Pagesでの公開**
   - GitHub Pagesを使って簡単かつ再利用可能な公開手順を確立。

---

## 要件

### 機能一覧と仕様

#### 1. スライドの基本的な構成方法（最大3スライド）
- 見出し、本文、フッターの配置方法。
- スライドの基本的なナビゲーションの説明。
- `theme: uncover`などのテーマ設定の活用。

#### 2. テキストの装飾（最大5スライド）
- 太字、斜体、下線、打消し線の使い方。
- 色の変更やサイズ調整方法。
- ハイライトの挿入。
- マークダウン表現とHTMLを組み合わせた装飾。

#### 3. 画像の挿入（最大2スライド）
- ローカル画像と外部URL画像の挿入方法。
- サイズ調整や位置指定。

#### 4. リンクの挿入（最大2スライド）
- URLリンクの挿入。
- ボタンスタイルのリンク作成。

#### 5. コードの挿入（最大2スライド）
- コードブロックの挿入と言語指定（例：`python`、`javascript`）。
- ハイライトや番号付きコードの表示。

#### 6. テーブルの挿入（最大2スライド）
- Markdownでの基本的な表の作成。
- 表のスタイル調整。

#### 7. リストの挿入（最大3スライド）
- 番号付きリスト、箇条書きリスト。
- 入れ子リストの作成。

#### 8. アニメーションの追加（最大40スライド）
- クラスを使ったアニメーション効果：
  - `<!-- _class: lead -->`と`<!-- _class: lead invert -->`。
  - `<style scoped>...</style>`を活用したカスタムアニメーション。
  - `<!-- _class: anime -->`で定義するアニメーション。
- カスタムCSSを組み合わせた高度なアニメーション。

#### 9. カスタムCSSの追加（最大20スライド）
- `@import`を用いた外部CSSの導入。
- スライド全体のテーマや個別スタイルのカスタマイズ。

#### 10. 凝ったスライドの作成（最大5スライド）
- 独自デザインのレイアウト作成。
- Marpの拡張機能（例：PDFエクスポート時のスタイル）を活用。

---

### 作成するスライドの要件
1. **スライド枚数**
   - 各項目の上限枚数内で調整し、内容を網羅すること。
2. **教育的要素と備忘録的要素の両立**
   - 初学者にも分かりやすく、高度な活用方法を網羅する。

---

## 作業フロー

1. **設計フェーズ**
   - スライド内容を決定し、構成を設計。
2. **実装フェーズ**
   - 各スライドを作成。Marp機能を実装し、GitHubにプッシュ。
3. **テストフェーズ**
   - 作成後に正常動作を確認。必要に応じて修正。
4. **公開フェーズ**
   - GitHub Pagesでスライドを公開。

---

## テスト要件
- **テストタイミング**：各スライド作成後。
- **テスト内容**：
  1. 各機能が正常に動作するか。
  2. GitHub Pages上でスライドが正しく表示されるか。
  3. レイアウト崩れや非対応ブラウザの確認。

---

## GitHub運用方針

1. **リポジトリ作成**
   - プロジェクト専用のリポジトリを作成。
2. **READMEの記載**
   - リポジトリの概要、Marpの環境構築方法、公開手順を記載。
3. **コミットポリシー**
   - 小さな変更でも頻繁にコミットし、細かくバージョン管理。
4. **ブランチ戦略**
   - `main`：公開用の安定版。
   - `feature/xxxx`：各スライドまたは機能の作成用ブランチ。

---

## 必要な環境
1. **Marp CLI**
   - Node.js経由でインストール可能。
   - 動作確認済みバージョンをREADMEに記載。
2. **GitHub Pages**
   - 静的ページホスティング機能を活用。
3. **ブラウザ互換性**
   - 最新のChrome, Firefox, Edgeで動作確認。

---

## 動作手順

1. **Marp CLIのインストール**
   ```bash
   npm install -g @marp-team/marp-cli
   ```

2. **スライド作成**
   - 作業ディレクトリを作成し、その中にMarkdownファイル（例：`slides.md`）を用意。
   - 必要な内容をMarkdown記法で記述。

3. **スライドのプレビュー**
   ```bash
   marp --preview <ファイル名>.md
   ```

4. **PDFまたはHTMLエクスポート**
   - PDF出力:
     ```bash
     marp --pdf <ファイル名>.md
     ```
   - HTML出力:
     ```bash
     marp --html <ファイル名>.md
     ```

5. **GitHub Pagesへの公開**
   - 作成したリポジトリの`Settings` > `Pages`で公開設定を行います。
   - `Source`を`main`ブランチまたは`docs`フォルダに指定。

---



## 参照サイトおよび公式ページ

- [Marp公式サイト](https://marp.app/)
- [Marp CLI GitHubリポジトリ](https://github.com/marp-team/marp-cli)
- [GitHub Pagesの公式ドキュメント](https://pages.github.com/)